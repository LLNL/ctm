# autogenerated module using JSONSchema2Struct (author: I. Aravena, aravenasolis1@llnl.gov)
# timestamp: 2024-08-01T00:53:44.144

module CTMSolution

import JSON3, StructTypes

Base.@kwdef mutable struct TimeSeriesReference
    uid::Union{Int64, String}=0
    scale_factor::Float64=0.0
end

Uid = Any

NonnegativeInteger = Int64

Binary = Int64

PositiveInteger = Int64

NonnegativeNumber = Float64

PositiveNumber = Float64

Base.@kwdef mutable struct ReserveProvision
    rg::Union{NonnegativeNumber, TimeSeriesReference}=NonnegativeNumber()
    uid::Uid=Uid()
end

Base.@kwdef mutable struct Bus
    p_lambda::Union{Missing, Union{Float64, TimeSeriesReference}}=missing
    va::Union{Float64, TimeSeriesReference}=0.0
    q_lambda::Union{Missing, Union{Float64, TimeSeriesReference}}=missing
    q_imbalance::Union{Missing, Union{Float64, TimeSeriesReference}}=missing
    uid::Uid=Uid()
    vm::Union{Missing, Union{PositiveNumber, TimeSeriesReference}}=missing
    p_imbalance::Union{Missing, Union{Float64, TimeSeriesReference}}=missing
    ext::Union{Missing, Any}=missing
end

Base.@kwdef mutable struct HvdcP2P
    pdc_to::Union{Float64, TimeSeriesReference}=0.0
    qdc_fr::Union{Missing, Union{Float64, TimeSeriesReference}}=missing
    uid::Uid=Uid()
    pdc_fr::Union{Float64, TimeSeriesReference}=0.0
    ext::Union{Missing, Any}=missing
    qdc_to::Union{Missing, Union{Float64, TimeSeriesReference}}=missing
    vm_dc::Union{Missing, Union{PositiveNumber, TimeSeriesReference}}=missing
end

Base.@kwdef mutable struct Switch
    state::Union{Binary, TimeSeriesReference}=Binary()
    uid::Uid=Uid()
    ext::Union{Missing, Any}=missing
    psw_fr::Union{Missing, Union{Float64, TimeSeriesReference}}=missing
    qsw_fr::Union{Missing, Union{Float64, TimeSeriesReference}}=missing
end

Base.@kwdef mutable struct Storage
    qs::Union{Missing, Union{Float64, TimeSeriesReference}}=missing
    uid::Uid=Uid()
    ext::Union{Missing, Any}=missing
    charge::Union{Missing, Union{NonnegativeNumber, TimeSeriesReference}}=missing
    energy::Union{NonnegativeNumber, TimeSeriesReference}=NonnegativeNumber()
    discharge::Union{Missing, Union{NonnegativeNumber, TimeSeriesReference}}=missing
    ps::Union{Float64, TimeSeriesReference}=0.0
end

Base.@kwdef mutable struct Transformer
    pt_to::Union{Missing, Union{Float64, TimeSeriesReference}}=missing
    pt_fr::Union{Missing, Union{Float64, TimeSeriesReference}}=missing
    uid::Uid=Uid()
    ext::Union{Missing, Any}=missing
    tm::Union{Missing, Union{Float64, TimeSeriesReference}}=missing
    qt_fr::Union{Missing, Union{Float64, TimeSeriesReference}}=missing
    ta::Union{Missing, Union{Float64, TimeSeriesReference}}=missing
    qt_to::Union{Missing, Union{Float64, TimeSeriesReference}}=missing
end

Base.@kwdef mutable struct GlobalParams
    base_mva::Union{Missing, PositiveNumber}=missing
    unit_convention::String=""
end

Base.@kwdef mutable struct Shunt
    num_steps::Union{NonnegativeInteger, Vector{NonnegativeInteger}, TimeSeriesReference}=NonnegativeInteger()
    uid::Uid=Uid()
    ext::Union{Missing, Any}=missing
end

Base.@kwdef mutable struct Gen
    reserve_provision::Union{Missing, Vector{ReserveProvision}}=missing
    qg::Union{Missing, Union{Float64, TimeSeriesReference}}=missing
    pg::Union{Float64, TimeSeriesReference}=0.0
    uid::Uid=Uid()
    in_service::Union{Missing, Union{Binary, TimeSeriesReference}}=missing
    ext::Union{Missing, Any}=missing
end

Base.@kwdef mutable struct AcLine
    ql_fr::Union{Missing, Union{Float64, TimeSeriesReference}}=missing
    pl_to::Union{Missing, Union{Float64, TimeSeriesReference}}=missing
    ql_to::Union{Missing, Union{Float64, TimeSeriesReference}}=missing
    uid::Uid=Uid()
    ext::Union{Missing, Any}=missing
    pl_fr::Union{Missing, Union{Float64, TimeSeriesReference}}=missing
end

Base.@kwdef mutable struct Reserve
    uid::Uid=Uid()
    shortfall::Union{Float64, TimeSeriesReference}=0.0
    ext::Union{Missing, Any}=missing
end

Base.@kwdef mutable struct Solution
    reserve::Union{Missing, Vector{Reserve}}=missing
    ac_line::Union{Missing, Vector{AcLine}}=missing
    gen::Vector{Gen}=Vector{Gen}()
    shunt::Union{Missing, Vector{Shunt}}=missing
    global_params::GlobalParams=GlobalParams()
    transformer::Union{Missing, Vector{Transformer}}=missing
    storage::Union{Missing, Vector{Storage}}=missing
    switch::Union{Missing, Vector{Switch}}=missing
    hvdc_p2p::Union{Missing, Vector{HvdcP2P}}=missing
    bus::Vector{Bus}=Vector{Bus}()
end

Base.@kwdef mutable struct TimeSeriesData
    name::Union{Missing, Vector{String}}=missing
    path_to_file::Union{Missing, Union{String, Vector{String}}}=missing
    values::Union{Missing, Vector{Vector{Any}}}=missing
    uid::Vector{Uid}=Vector{Uid}()
    ext::Union{Missing, Vector{Any}}=missing
    timestamp::Union{Missing, Vector{NonnegativeNumber}}=missing
end

Base.@kwdef mutable struct Root
    ctm_version::String=""
    time_series_data::Union{Missing, TimeSeriesData}=missing
    solution::Solution=Solution()
end

StructTypes.StructType(::Type{TimeSeriesReference}) = StructTypes.Mutable()
StructTypes.StructType(::Type{ReserveProvision}) = StructTypes.Mutable()
StructTypes.StructType(::Type{Bus}) = StructTypes.Mutable()
StructTypes.StructType(::Type{HvdcP2P}) = StructTypes.Mutable()
StructTypes.StructType(::Type{Switch}) = StructTypes.Mutable()
StructTypes.StructType(::Type{Storage}) = StructTypes.Mutable()
StructTypes.StructType(::Type{Transformer}) = StructTypes.Mutable()
StructTypes.StructType(::Type{GlobalParams}) = StructTypes.Mutable()
StructTypes.StructType(::Type{Shunt}) = StructTypes.Mutable()
StructTypes.StructType(::Type{Gen}) = StructTypes.Mutable()
StructTypes.StructType(::Type{AcLine}) = StructTypes.Mutable()
StructTypes.StructType(::Type{Reserve}) = StructTypes.Mutable()
StructTypes.StructType(::Type{Solution}) = StructTypes.Mutable()
StructTypes.StructType(::Type{TimeSeriesData}) = StructTypes.Mutable()
StructTypes.StructType(::Type{Root}) = StructTypes.Mutable()

function parse(fname::String)::Root
    obj = open(fname, "r") do f
              JSON3.read(f, Root)
          end
    return obj
end

function remove_null_fields(fname::String)::Nothing
    run(pipeline(`grep -vwE '(: null)' $fname`, stdout=fname * "_tmp"))
    in_io = open(fname * "_tmp", "r")
    out_io = open(fname, "w")
    prev_ln = ""
    for ln in eachline(in_io)
        if prev_ln == ""        # first line
            prev_ln = ln
        elseif rstrip(prev_ln)[end] == ',' && lstrip(ln)[1] == '}'
            prev_ln = rstrip(prev_ln)[1:(end-1)]    # remove dangling comma
            println(out_io, prev_ln)
            prev_ln = ln
        else                    # nothing to do
            println(out_io, prev_ln)
            prev_ln = ln
        end
    end
    print(out_io, prev_ln)
    close(in_io)
    close(out_io)
    rm(fname * "_tmp")
end

function write(fname::String, x, omit_nulls::Bool=true)
    open(fname, "w") do f
        JSON3.pretty(f, x)
    end
    if omit_nulls
        remove_null_fields(fname)
    end
end

Int64() = Int64(0)
Float64() = Float64(0)
String() = ""
Bool() = false

Any() = nothing

end # module